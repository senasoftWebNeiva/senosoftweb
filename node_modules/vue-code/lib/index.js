'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var CodeMirror = _interopDefault(require('codemirror'));

var defaultOptions = {
  lineNumbers: true,
  tabSize: 2
};

var index = {
  props: ['value', 'options'],
  render: function render(h) {
    return h('div');
  },
  watch: {
    value: 'update',
    options: function options(_options, oldOptions) {
      var cm = this.cm;

      if (!cm) return;
      for (var key in Object.assign({}, oldOptions, _options)) {
        if (_options[key] !== oldOptions[key]) {
          cm.setOption(key, _options[key]);
        }
      }
    }
  },
  methods: {
    update: function update(value) {
      if (value === this.cached) return;
      this.cm && this.cm.setValue(this.cached = value);
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.cm = CodeMirror(this.$el, Object.assign({}, defaultOptions, this.options));
    this.$emit('ready', this.cm);
    this.cm.on('change', function (cm) {
      _this.$emit('input', _this.cached = cm.getValue());
    });
    this.update(this.value);
  }
};

module.exports = index;
